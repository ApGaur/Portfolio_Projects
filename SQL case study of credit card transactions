--1-write a query to print top 5 cities with highest spends 
--and their percentage contribution of total credit card spends 
;
with cte as
(select city, sum(amount) as spend
from win_fun.credit_card_transcations
group by city
order by spend desc 
limit 5)
,cte1 as
(
select sum(amount) as total_spend
from win_fun.credit_card_transcations
)

--2- write a query to print highest spend month and amount spent in that month for each card type
with cte as(
select card_type, year(transaction_date) as Years, sum(amount) as total_spend, month(transaction_date) as m
from win_fun.credit_card_transcations
group by 1,2,4
order by card_type, total_spend desc)

select * from (select *, rank() over(partition by card_type order by total_spend desc) as rnk
from cte)A where rnk = 1;
)

--3- write a query to print the transaction details(all columns from the table) for each card type when
--it reaches a cumulative of  1,000,000 total spends(We should have 4 rows in the o/p one for each card type)

with cte as (
select *,sum(amount) over(partition by card_type order by transaction_date,transaction_id) as total_spend
from credit_card_transcations
--order by card_type,total_spend desc
)
select * from (select *, rank() over(partition by card_type order by total_spend) as rn  
from cte where total_spend >= 1000000) a where rn=1

--4- write a query to find city which had lowest percentage spend for gold card type
with cte as
(
select city, card_type, sum(amount) as total_spend
from win_fun.credit_card_transcations
where card_type like 'Gold'
group by 1,2)
,cte1 as
(select sum(amount) as total
from win_fun.credit_card_transcations)

select city, (total_spend/total)*100.0 as gold_ratio
from cte,cte1
order by gold_ratio
limit 1;

--5-write a query to print 3 columns:  city, highest_expense_type , lowest_expense_type (example format : Delhi , bills, Fuel)

with cte as(
select city, exp_type,sum(amount) as total_spent
from win_fun.credit_card_transcations
group by 1,2)
,cte1 as
(select *, rank() over(partition by city order by total_spent desc) as max_rnk,
rank() over(partition by city order by total_spent asc) as min_rnk
from cte)

select city, max(case when max_rnk = 1 then exp_type end) as highest_expense_type,
min(case when min_rnk = 1 then exp_type end) as lowest_expense_type 
from cte1
group by city;

--6- write a query to find percentage contribution of spends by females for each expense type
select exp_type,
sum(case when gender='F' then amount else 0 end)*1.0/sum(amount) as percentage_female_contribution
from credit_card_transcations
group by exp_type
order by percentage_female_contribution desc;

--7- which card and expense type combination saw highest month over month growth in Jan-2014
with cte as (
select card_type,exp_type, Year(transaction_date) as yt
,month(transaction_date) mt,sum(amount) as total_spend
from credit_card_transcations
group by card_type,exp_type,year(transaction_date),month(transaction_date)
)
select *, (total_spend-prev_mont_spend) as mom_growth
from (
select *
,lag(total_spend,1) over(partition by card_type,exp_type order by yt,mt) as prev_mont_spend
from cte) A
where prev_mont_spend is not null and yt=2014 and mt=1
order by mom_growth desc;
limit 1;

--8- during weekends which city has highest total spend to total no of transcations ratio 
select city , sum(amount)*1.0/count(1) as ratio
from credit_card_transcations
where datepart(weekday,transaction_date) in (1,7)
--where datename(weekday,transaction_date) in ('Saturday','Sunday')
group by city
order by ratio desc
limit 1;

--9- which city took least number of days to reach its
--500th transaction after the first transaction in that city;
;
with cte as (
select *
,row_number() over(partition by city order by transaction_date,transaction_id) as rn
from credit_card_transcations)
select city,datediff(day,min(transaction_date),max(transaction_date)) as datediff1
from cte
where rn=1 or rn=500
group by city
having count(1)=2
order by datediff1
limit 1;





























